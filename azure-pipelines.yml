# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: Commit_stage
  jobs: 
  - job: Build
    steps:
    - script: |
        wget https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb && sudo dpkg -i erlang-solutions_2.0_all.deb
        sudo apt-get update
        sudo apt-get install esl-erlang
    - script: |
        sudo apt-get install elixir
        mix local.hex --force
        mix local.rebar --force
    - script: |
        mix deps.get
    - script: |
        mix format --check-formatted
        mix credo --strict
    - script: |
        mix compile
        echo mix test --exclude acceptance
    - script: |
        echo deploy to gigalixir
        echo save artifact Quellcode
- stage: Acceptance_testing_stage
  jobs:
  - job: Acceptance_testing
    steps:
    - script: | 
        echo Create App -Cluster the code!
        echo Execute Acceptante test BDD
        echo generate HAR File for Capacity tests
- stage: Capacity_testing_stage
  jobs:
  - job: Capacity_testing
    steps:
    - script: |
        echo nightly run on clean cluster optional hotfix 
- stage: Manual_testing_stage
  jobs:
  - job: Manual_testing
    steps:
    - script: |
        echo freigabe on demand optional hotfix
- stage: Release_stage
  jobs:
  - job: Release
    steps:
    - script: |
        echo auf prod deployen. 

    

       
      
